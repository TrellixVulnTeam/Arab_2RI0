{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Issa\\\\web\\\\New folder (2)\\\\theFront-v3.2.2\\\\react-scripts\\\\src\\\\views\\\\Elearning\\\\components\\\\Courses\\\\Courses.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography, colors, Avatar, NoSsr } from '@material-ui/core';\nimport { Image, LearnMoreLink } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nimport { CardProduct } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  cardProduct: {\n    borderRadius: theme.spacing(3)\n  },\n  courseCardPrice: {\n    padding: theme.spacing(1),\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    background: theme.palette.background.paper,\n    borderRadius: theme.spacing(1)\n  },\n  courseCardReviewAvatar: {\n    marginLeft: theme.spacing(-2),\n    border: `3px solid ${theme.palette.background.paper}`,\n    '&:first-child': {\n      marginLeft: 0\n    }\n  },\n  courseCardReviewStar: {\n    color: colors.yellow[800],\n    marginRight: theme.spacing(1 / 2)\n  },\n  reviewCount: {\n    marginLeft: theme.spacing(1)\n  },\n  image: {\n    objectFit: 'cover'\n  },\n  fontWeight700: {\n    fontWeight: 700\n  }\n}));\n\nconst Courses = props => {\n  _s();\n\n  const {\n    data,\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n      title: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Browse our \", /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"secondary\",\n          variant: \"inherit\",\n          component: \"span\",\n          children: \"popular courses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this),\n      subtitle: \"Here are our popular course you might want to learn from your tutor.\",\n      fadeUp: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: isMd ? 4 : 2,\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 6,\n        \"data-aos\": \"fade-up\",\n        children: /*#__PURE__*/_jsxDEV(CardProduct, {\n          className: classes.cardProduct,\n          withShadow: true,\n          liftUp: true,\n          mediaContent: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Image, { ...item.image,\n              alt: item.title,\n              lazyProps: {\n                width: '100%',\n                height: '100%'\n              },\n              className: classes.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.courseCardPrice,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"primary\",\n                className: classes.fontWeight700,\n                children: item.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true),\n          cardContent: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"textPrimary\",\n                align: \"left\",\n                className: classes.fontWeight700,\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"textSecondary\",\n                align: \"left\",\n                children: item.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              container: true,\n              justify: \"space-between\",\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                container: true,\n                xs: 6,\n                wrap: \"nowrap\",\n                children: item.reviews.map((review, index) => /*#__PURE__*/_jsxDEV(Avatar, {\n                  className: classes.courseCardReviewAvatar,\n                  alt: review.authorName,\n                  ...review.authorPhoto\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                container: true,\n                alignItems: \"center\",\n                justify: \"flex-end\",\n                xs: 6,\n                children: [/*#__PURE__*/_jsxDEV(NoSsr, {\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: clsx('fas fa-star', classes.courseCardReviewStar)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"body1\",\n                  className: classes.fontWeight700,\n                  children: item.score\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  noWrap: true,\n                  component: \"span\",\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  className: classes.reviewCount,\n                  children: [\"(\", item.reviewCount, \" reviews)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(LearnMoreLink, {\n                title: \"Learn more\",\n                variant: \"body1\",\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Courses, \"9025em9jOQdmzpWvV0plUgcVqs8=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Courses;\nCourses.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired\n};\nexport default Courses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Courses\");","map":{"version":3,"sources":["C:/Users/Issa/web/New folder (2)/theFront-v3.2.2/react-scripts/src/views/Elearning/components/Courses/Courses.js"],"names":["React","PropTypes","clsx","makeStyles","useTheme","useMediaQuery","Grid","Typography","colors","Avatar","NoSsr","Image","LearnMoreLink","SectionHeader","CardProduct","useStyles","theme","cardProduct","borderRadius","spacing","courseCardPrice","padding","position","bottom","right","background","palette","paper","courseCardReviewAvatar","marginLeft","border","courseCardReviewStar","color","yellow","marginRight","reviewCount","image","objectFit","fontWeight700","fontWeight","Courses","props","data","className","rest","classes","isMd","breakpoints","up","defaultMatches","map","item","index","title","width","height","price","address","reviews","review","authorName","authorPhoto","score","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  useMediaQuery,\n  Grid,\n  Typography,\n  colors,\n  Avatar,\n  NoSsr,\n} from '@material-ui/core';\nimport { Image, LearnMoreLink } from 'components/atoms';\nimport { SectionHeader } from 'components/molecules';\nimport { CardProduct } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  cardProduct: {\n    borderRadius: theme.spacing(3),\n  },\n  courseCardPrice: {\n    padding: theme.spacing(1),\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    background: theme.palette.background.paper,\n    borderRadius: theme.spacing(1),\n  },\n  courseCardReviewAvatar: {\n    marginLeft: theme.spacing(-2),\n    border: `3px solid ${theme.palette.background.paper}`,\n    '&:first-child': {\n      marginLeft: 0,\n    },\n  },\n  courseCardReviewStar: {\n    color: colors.yellow[800],\n    marginRight: theme.spacing(1 / 2),\n  },\n  reviewCount: {\n    marginLeft: theme.spacing(1),\n  },\n  image: {\n    objectFit: 'cover',\n  },\n  fontWeight700: {\n    fontWeight: 700,\n  },\n}));\n\nconst Courses = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      <SectionHeader\n        title={\n          <span>\n            Browse our <Typography color=\"secondary\" variant=\"inherit\" component=\"span\">popular courses</Typography>\n          </span>\n        }\n        subtitle=\"Here are our popular course you might want to learn from your tutor.\"\n        fadeUp\n      />\n      <Grid container spacing={isMd ? 4 : 2}>\n        {data.map((item, index) => (\n          <Grid key={index} item xs={12} sm={12} md={6} data-aos=\"fade-up\">\n            <CardProduct\n              className={classes.cardProduct}\n              withShadow\n              liftUp\n              mediaContent={\n                <>\n                  <Image\n                    {...item.image}\n                    alt={item.title}\n                    lazyProps={{ width: '100%', height: '100%' }}\n                    className={classes.image}\n                  />\n                  <div className={classes.courseCardPrice}>\n                    <Typography\n                      variant=\"body1\"\n                      color=\"primary\"\n                      className={classes.fontWeight700}\n                    >\n                      {item.price}\n                    </Typography>\n                  </div>\n                </>\n              }\n              cardContent={\n                <Grid container spacing={1}>\n                  <Grid item xs={12}>\n                    <Typography\n                      variant=\"h6\"\n                      color=\"textPrimary\"\n                      align=\"left\"\n                      className={classes.fontWeight700}\n                    >\n                      {item.title}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography\n                      variant=\"body1\"\n                      color=\"textSecondary\"\n                      align=\"left\"\n                    >\n                      {item.address}\n                    </Typography>\n                  </Grid>\n                  <Grid item container justify=\"space-between\" xs={12}>\n                    <Grid item container xs={6} wrap=\"nowrap\">\n                      {item.reviews.map((review, index) => (\n                        <Avatar\n                          key={index}\n                          className={classes.courseCardReviewAvatar}\n                          alt={review.authorName}\n                          {...review.authorPhoto}\n                        />\n                      ))}\n                    </Grid>\n                    <Grid\n                      item\n                      container\n                      alignItems=\"center\"\n                      justify=\"flex-end\"\n                      xs={6}\n                    >\n                      <NoSsr>\n                        <i\n                          className={clsx(\n                            'fas fa-star',\n                            classes.courseCardReviewStar,\n                          )}\n                        />\n                      </NoSsr>\n                      <Typography\n                        component=\"span\"\n                        variant=\"body1\"\n                        className={classes.fontWeight700}\n                      >\n                        {item.score}\n                      </Typography>\n                      <Typography\n                        noWrap\n                        component=\"span\"\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        className={classes.reviewCount}\n                      >\n                        ({item.reviewCount} reviews)\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <LearnMoreLink\n                      title=\"Learn more\"\n                      variant=\"body1\"\n                      color=\"primary\"\n                    />\n                  </Grid>\n                </Grid>\n              }\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nCourses.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default Courses;\n"]},"metadata":{},"sourceType":"module"}