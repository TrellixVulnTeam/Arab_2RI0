{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Issa\\\\web\\\\theFront\\\\theFront-v3.2.2\\\\react-scripts\\\\src\\\\views\\\\CareerListing\\\\components\\\\Promo\\\\Promo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography } from '@material-ui/core';\nimport { Image } from 'components/atoms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  copy: {\n    textAlign: 'center'\n  },\n  title: {\n    fontWeight: 900\n  },\n  logoImg: {\n    width: '100%',\n    maxWidth: 100\n  }\n}));\n\nconst Promo = props => {\n  _s();\n\n  const {\n    data,\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.root, className),\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: isMd ? 0 : 1,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"textSecondary\",\n          align: isMd ? 'left' : 'center',\n          className: classes.title,\n          children: \"Companies we have helped build:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        justify: isMd ? 'center' : 'space-between',\n        xs: 12,\n        md: 8,\n        children: data.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          container: true,\n          justify: \"center\",\n          xs: 6,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: item.logo,\n            alt: item.name,\n            className: classes.logoImg,\n            lazy: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Promo, \"9025em9jOQdmzpWvV0plUgcVqs8=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Promo;\nPromo.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * Data to render\n   */\n  data: PropTypes.array.isRequired\n};\nexport default Promo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Promo\");","map":{"version":3,"sources":["C:/Users/Issa/web/theFront/theFront-v3.2.2/react-scripts/src/views/CareerListing/components/Promo/Promo.js"],"names":["React","PropTypes","clsx","makeStyles","useTheme","useMediaQuery","Grid","Typography","Image","useStyles","theme","root","width","copy","textAlign","title","fontWeight","logoImg","maxWidth","Promo","props","data","className","rest","classes","isMd","breakpoints","up","defaultMatches","map","item","index","logo","name","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography } from '@material-ui/core';\n\nimport { Image } from 'components/atoms';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  copy: {\n    textAlign: 'center',\n  },\n  title: {\n    fontWeight: 900,\n  },\n  logoImg: {\n    width: '100%',\n    maxWidth: 100,\n  },\n}));\n\nconst Promo = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid container spacing={isMd ? 0 : 1}>\n        <Grid item xs={12} md={4}>\n          <Typography\n            variant=\"h6\"\n            color=\"textSecondary\"\n            align={isMd ? 'left' : 'center'}\n            className={classes.title}\n          >\n            Companies we have helped build:\n          </Typography>\n        </Grid>\n        <Grid\n          item\n          container\n          justify={isMd ? 'center' : 'space-between'}\n          xs={12}\n          md={8}\n        >\n          {data.map((item, index) => (\n            <Grid\n              item\n              container\n              justify=\"center\"\n              xs={6}\n              sm={2}\n              key={index}\n            >\n              <Image\n                src={item.logo}\n                alt={item.name}\n                className={classes.logoImg}\n                lazy={false}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nPromo.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * Data to render\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default Promo;\n"]},"metadata":{},"sourceType":"module"}