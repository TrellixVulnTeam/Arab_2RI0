{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Issa\\\\web\\\\New folder (2)\\\\reactthefront\\\\theFront-v3.2.2\\\\react-scripts\\\\src\\\\views\\\\Expo\\\\components\\\\About\\\\About.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography } from '@material-ui/core';\nimport { HeroSideImage } from 'components/organisms';\nconst useStyles = makeStyles(() => ({\n  fontWeight700: {\n    fontWeight: 700\n  },\n  textWhite: {\n    color: 'white'\n  }\n}));\n\nconst About = props => {\n  _s();\n\n  const {\n    data,\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    \"data-aos\": \"fade-up\",\n    ...rest,\n    children: data.map((item, index) => /*#__PURE__*/_jsxDEV(HeroSideImage, {\n      imageSrc: item.image.src,\n      imageSrcSet: item.image.srcSet,\n      reverse: index % 2 === 0,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: isMd ? 'h4' : 'h5',\n            color: \"primary\",\n            className: clsx(isMd ? '' : classes.textWhite, classes.fontWeight700),\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: isMd ? 'h6' : 'body1',\n            className: clsx(isMd ? '' : classes.textWhite, classes.fontWeight700),\n            children: item.subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: isMd ? 'body1' : 'body2',\n            color: \"textSecondary\",\n            className: isMd ? '' : classes.textWhite,\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(About, \"9025em9jOQdmzpWvV0plUgcVqs8=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = About;\nAbout.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired\n};\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["C:/Users/Issa/web/New folder (2)/reactthefront/theFront-v3.2.2/react-scripts/src/views/Expo/components/About/About.js"],"names":["React","PropTypes","clsx","makeStyles","useTheme","useMediaQuery","Grid","Typography","HeroSideImage","useStyles","fontWeight700","fontWeight","textWhite","color","About","props","data","className","rest","classes","theme","isMd","breakpoints","up","defaultMatches","map","item","index","image","src","srcSet","title","subtitle","description","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useMediaQuery, Grid, Typography } from '@material-ui/core';\nimport { HeroSideImage } from 'components/organisms';\n\nconst useStyles = makeStyles(() => ({\n  fontWeight700: {\n    fontWeight: 700,\n  },\n  textWhite: {\n    color: 'white',\n  },\n}));\n\nconst About = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} data-aos=\"fade-up\" {...rest}>\n      {data.map((item, index) => (\n        <HeroSideImage\n          imageSrc={item.image.src}\n          imageSrcSet={item.image.srcSet}\n          reverse={index % 2 === 0}\n          key={index}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography\n                variant={isMd ? 'h4' : 'h5'}\n                color=\"primary\"\n                className={clsx(\n                  isMd ? '' : classes.textWhite,\n                  classes.fontWeight700,\n                )}\n              >\n                {item.title}\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography\n                variant={isMd ? 'h6' : 'body1'}\n                className={clsx(\n                  isMd ? '' : classes.textWhite,\n                  classes.fontWeight700,\n                )}\n              >\n                {item.subtitle}\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography\n                variant={isMd ? 'body1' : 'body2'}\n                color=\"textSecondary\"\n                className={isMd ? '' : classes.textWhite}\n              >\n                {item.description}\n              </Typography>\n            </Grid>\n          </Grid>\n        </HeroSideImage>\n      ))}\n    </div>\n  );\n};\n\nAbout.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default About;\n"]},"metadata":{},"sourceType":"module"}