{"ast":null,"code":"import global from 'global'; // Deferred\n// thanks http://stackoverflow.com/questions/18096715/implement-deferred-object-without-using-jquery\n\nfunction Deferred() {\n  this.doneCallbacks = [];\n  this.failCallbacks = [];\n}\n\nDeferred.prototype = {\n  execute(list, args) {\n    let i = list.length;\n    args = Array.prototype.slice.call(args);\n\n    while (i) {\n      i -= 1;\n      list[i].apply(null, args);\n    }\n  },\n\n  resolve(...args) {\n    this.execute(this.doneCallbacks, args);\n  },\n\n  reject(...args) {\n    this.execute(this.failCallbacks, args);\n  },\n\n  done(callback) {\n    this.doneCallbacks.push(callback);\n  },\n\n  fail(callback) {\n    this.failCallbacks.push(callback);\n  }\n\n};\nlet ID = 0;\nlet YoutubeAPIadded = 0;\nlet VimeoAPIadded = 0;\nlet loadingYoutubePlayer = 0;\nlet loadingVimeoPlayer = 0;\nconst loadingYoutubeDefer = new Deferred();\nconst loadingVimeoDefer = new Deferred();\nexport default class VideoWorker {\n  constructor(url, options) {\n    const self = this;\n    self.url = url;\n    self.options_default = {\n      autoplay: false,\n      loop: false,\n      mute: false,\n      volume: 100,\n      showContols: true,\n      // start / end video time in seconds\n      startTime: 0,\n      endTime: 0\n    };\n    self.options = self.extend({}, self.options_default, options); // check URL\n\n    self.videoID = self.parseURL(url); // init\n\n    if (self.videoID) {\n      self.ID = ID;\n      ID += 1;\n      self.loadAPI();\n      self.init();\n    }\n  } // Extend like jQuery.extend\n  // eslint-disable-next-line class-methods-use-this\n\n\n  extend(...args) {\n    const out = args[0] || {};\n    Object.keys(args).forEach(i => {\n      if (!args[i]) {\n        return;\n      }\n\n      Object.keys(args[i]).forEach(key => {\n        out[key] = args[i][key];\n      });\n    });\n    return out;\n  }\n\n  parseURL(url) {\n    // parse youtube ID\n    function getYoutubeID(ytUrl) {\n      // eslint-disable-next-line no-useless-escape\n      const regExp = /.*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=)([^#\\&\\?]*).*/;\n      const match = ytUrl.match(regExp);\n      return match && 11 === match[1].length ? match[1] : false;\n    } // parse vimeo ID\n\n\n    function getVimeoID(vmUrl) {\n      // eslint-disable-next-line no-useless-escape\n      const regExp = /https?:\\/\\/(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/([^\\/]*)\\/videos\\/|album\\/(\\d+)\\/video\\/|video\\/|)(\\d+)(?:$|\\/|\\?)/;\n      const match = vmUrl.match(regExp);\n      return match && match[3] ? match[3] : false;\n    } // parse local string\n\n\n    function getLocalVideos(locUrl) {\n      // eslint-disable-next-line no-useless-escape\n      const videoFormats = locUrl.split(/,(?=mp4\\:|webm\\:|ogv\\:|ogg\\:)/);\n      const result = {};\n      let ready = 0;\n      videoFormats.forEach(val => {\n        // eslint-disable-next-line no-useless-escape\n        const match = val.match(/^(mp4|webm|ogv|ogg)\\:(.*)/);\n\n        if (match && match[1] && match[2]) {\n          // eslint-disable-next-line prefer-destructuring\n          result['ogv' === match[1] ? 'ogg' : match[1]] = match[2];\n          ready = 1;\n        }\n      });\n      return ready ? result : false;\n    }\n\n    const Youtube = getYoutubeID(url);\n    const Vimeo = getVimeoID(url);\n    const Local = getLocalVideos(url);\n\n    if (Youtube) {\n      this.type = 'youtube';\n      return Youtube;\n    }\n\n    if (Vimeo) {\n      this.type = 'vimeo';\n      return Vimeo;\n    }\n\n    if (Local) {\n      this.type = 'local';\n      return Local;\n    }\n\n    return false;\n  }\n\n  isValid() {\n    return !!this.videoID;\n  } // events\n\n\n  on(name, callback) {\n    this.userEventsList = this.userEventsList || []; // add new callback in events list\n\n    (this.userEventsList[name] || (this.userEventsList[name] = [])).push(callback);\n  }\n\n  off(name, callback) {\n    if (!this.userEventsList || !this.userEventsList[name]) {\n      return;\n    }\n\n    if (!callback) {\n      delete this.userEventsList[name];\n    } else {\n      this.userEventsList[name].forEach((val, key) => {\n        if (val === callback) {\n          this.userEventsList[name][key] = false;\n        }\n      });\n    }\n  }\n\n  fire(name, ...args) {\n    if (this.userEventsList && 'undefined' !== typeof this.userEventsList[name]) {\n      this.userEventsList[name].forEach(val => {\n        // call with all arguments\n        if (val) {\n          val.apply(this, args);\n        }\n      });\n    }\n  }\n\n  play(start) {\n    const self = this;\n\n    if (!self.player) {\n      return;\n    }\n\n    if ('youtube' === self.type && self.player.playVideo) {\n      if ('undefined' !== typeof start) {\n        self.player.seekTo(start || 0);\n      }\n\n      if (global.YT.PlayerState.PLAYING !== self.player.getPlayerState()) {\n        self.player.playVideo();\n      }\n    }\n\n    if ('vimeo' === self.type) {\n      if ('undefined' !== typeof start) {\n        self.player.setCurrentTime(start);\n      }\n\n      self.player.getPaused().then(paused => {\n        if (paused) {\n          self.player.play();\n        }\n      });\n    }\n\n    if ('local' === self.type) {\n      if ('undefined' !== typeof start) {\n        self.player.currentTime = start;\n      }\n\n      if (self.player.paused) {\n        self.player.play();\n      }\n    }\n  }\n\n  pause() {\n    const self = this;\n\n    if (!self.player) {\n      return;\n    }\n\n    if ('youtube' === self.type && self.player.pauseVideo) {\n      if (global.YT.PlayerState.PLAYING === self.player.getPlayerState()) {\n        self.player.pauseVideo();\n      }\n    }\n\n    if ('vimeo' === self.type) {\n      self.player.getPaused().then(paused => {\n        if (!paused) {\n          self.player.pause();\n        }\n      });\n    }\n\n    if ('local' === self.type) {\n      if (!self.player.paused) {\n        self.player.pause();\n      }\n    }\n  }\n\n  mute() {\n    const self = this;\n\n    if (!self.player) {\n      return;\n    }\n\n    if ('youtube' === self.type && self.player.mute) {\n      self.player.mute();\n    }\n\n    if ('vimeo' === self.type && self.player.setVolume) {\n      self.player.setVolume(0);\n    }\n\n    if ('local' === self.type) {\n      self.$video.muted = true;\n    }\n  }\n\n  unmute() {\n    const self = this;\n\n    if (!self.player) {\n      return;\n    }\n\n    if ('youtube' === self.type && self.player.mute) {\n      self.player.unMute();\n    }\n\n    if ('vimeo' === self.type && self.player.setVolume) {\n      self.player.setVolume(self.options.volume);\n    }\n\n    if ('local' === self.type) {\n      self.$video.muted = false;\n    }\n  }\n\n  setVolume(volume = false) {\n    const self = this;\n\n    if (!self.player || !volume) {\n      return;\n    }\n\n    if ('youtube' === self.type && self.player.setVolume) {\n      self.player.setVolume(volume);\n    }\n\n    if ('vimeo' === self.type && self.player.setVolume) {\n      self.player.setVolume(volume);\n    }\n\n    if ('local' === self.type) {\n      self.$video.volume = volume / 100;\n    }\n  }\n\n  getVolume(callback) {\n    const self = this;\n\n    if (!self.player) {\n      callback(false);\n      return;\n    }\n\n    if ('youtube' === self.type && self.player.getVolume) {\n      callback(self.player.getVolume());\n    }\n\n    if ('vimeo' === self.type && self.player.getVolume) {\n      self.player.getVolume().then(volume => {\n        callback(volume);\n      });\n    }\n\n    if ('local' === self.type) {\n      callback(self.$video.volume * 100);\n    }\n  }\n\n  getMuted(callback) {\n    const self = this;\n\n    if (!self.player) {\n      callback(null);\n      return;\n    }\n\n    if ('youtube' === self.type && self.player.isMuted) {\n      callback(self.player.isMuted());\n    }\n\n    if ('vimeo' === self.type && self.player.getVolume) {\n      self.player.getVolume().then(volume => {\n        callback(!!volume);\n      });\n    }\n\n    if ('local' === self.type) {\n      callback(self.$video.muted);\n    }\n  }\n\n  getImageURL(callback) {\n    const self = this;\n\n    if (self.videoImage) {\n      callback(self.videoImage);\n      return;\n    }\n\n    if ('youtube' === self.type) {\n      const availableSizes = ['maxresdefault', 'sddefault', 'hqdefault', '0'];\n      let step = 0;\n      const tempImg = new Image();\n\n      tempImg.onload = function () {\n        // if no thumbnail, youtube add their own image with width = 120px\n        if (120 !== (this.naturalWidth || this.width) || step === availableSizes.length - 1) {\n          // ok\n          self.videoImage = `https://img.youtube.com/vi/${self.videoID}/${availableSizes[step]}.jpg`;\n          callback(self.videoImage);\n        } else {\n          // try another size\n          step += 1;\n          this.src = `https://img.youtube.com/vi/${self.videoID}/${availableSizes[step]}.jpg`;\n        }\n      };\n\n      tempImg.src = `https://img.youtube.com/vi/${self.videoID}/${availableSizes[step]}.jpg`;\n    }\n\n    if ('vimeo' === self.type) {\n      let request = new XMLHttpRequest();\n      request.open('GET', `https://vimeo.com/api/v2/video/${self.videoID}.json`, true);\n\n      request.onreadystatechange = function () {\n        if (4 === this.readyState) {\n          if (200 <= this.status && 400 > this.status) {\n            // Success!\n            const response = JSON.parse(this.responseText);\n            self.videoImage = response[0].thumbnail_large;\n            callback(self.videoImage);\n          } else {// Error :(\n          }\n        }\n      };\n\n      request.send();\n      request = null;\n    }\n  } // fallback to the old version.\n\n\n  getIframe(callback) {\n    this.getVideo(callback);\n  }\n\n  getVideo(callback) {\n    const self = this; // return generated video block\n\n    if (self.$video) {\n      callback(self.$video);\n      return;\n    } // generate new video block\n\n\n    self.onAPIready(() => {\n      let hiddenDiv;\n\n      if (!self.$video) {\n        hiddenDiv = document.createElement('div');\n        hiddenDiv.style.display = 'none';\n      } // Youtube\n\n\n      if ('youtube' === self.type) {\n        self.playerOptions = {\n          // GDPR Compliance.\n          host: 'https://www.youtube-nocookie.com',\n          videoId: self.videoID,\n          playerVars: {\n            autohide: 1,\n            rel: 0,\n            autoplay: 0,\n            // autoplay enable on mobile devices\n            playsinline: 1\n          }\n        }; // hide controls\n\n        if (!self.options.showContols) {\n          self.playerOptions.playerVars.iv_load_policy = 3;\n          self.playerOptions.playerVars.modestbranding = 1;\n          self.playerOptions.playerVars.controls = 0;\n          self.playerOptions.playerVars.showinfo = 0;\n          self.playerOptions.playerVars.disablekb = 1;\n        } // events\n\n\n        let ytStarted;\n        let ytProgressInterval;\n        self.playerOptions.events = {\n          onReady(e) {\n            // mute\n            if (self.options.mute) {\n              e.target.mute();\n            } else if (self.options.volume) {\n              e.target.setVolume(self.options.volume);\n            } // autoplay\n\n\n            if (self.options.autoplay) {\n              self.play(self.options.startTime);\n            }\n\n            self.fire('ready', e); // For seamless loops, set the endTime to 0.1 seconds less than the video's duration\n            // https://github.com/nk-o/video-worker/issues/2\n\n            if (self.options.loop && !self.options.endTime) {\n              const secondsOffset = 0.1;\n              self.options.endTime = self.player.getDuration() - secondsOffset;\n            } // volumechange\n\n\n            setInterval(() => {\n              self.getVolume(volume => {\n                if (self.options.volume !== volume) {\n                  self.options.volume = volume;\n                  self.fire('volumechange', e);\n                }\n              });\n            }, 150);\n          },\n\n          onStateChange(e) {\n            // loop\n            if (self.options.loop && e.data === global.YT.PlayerState.ENDED) {\n              self.play(self.options.startTime);\n            }\n\n            if (!ytStarted && e.data === global.YT.PlayerState.PLAYING) {\n              ytStarted = 1;\n              self.fire('started', e);\n            }\n\n            if (e.data === global.YT.PlayerState.PLAYING) {\n              self.fire('play', e);\n            }\n\n            if (e.data === global.YT.PlayerState.PAUSED) {\n              self.fire('pause', e);\n            }\n\n            if (e.data === global.YT.PlayerState.ENDED) {\n              self.fire('ended', e);\n            } // progress check\n\n\n            if (e.data === global.YT.PlayerState.PLAYING) {\n              ytProgressInterval = setInterval(() => {\n                self.fire('timeupdate', e); // check for end of video and play again or stop\n\n                if (self.options.endTime && self.player.getCurrentTime() >= self.options.endTime) {\n                  if (self.options.loop) {\n                    self.play(self.options.startTime);\n                  } else {\n                    self.pause();\n                  }\n                }\n              }, 150);\n            } else {\n              clearInterval(ytProgressInterval);\n            }\n          },\n\n          onError(e) {\n            self.fire('error', e);\n          }\n\n        };\n        const firstInit = !self.$video;\n\n        if (firstInit) {\n          const div = document.createElement('div');\n          div.setAttribute('id', self.playerID);\n          hiddenDiv.appendChild(div);\n          document.body.appendChild(hiddenDiv);\n        }\n\n        self.player = self.player || new global.YT.Player(self.playerID, self.playerOptions);\n\n        if (firstInit) {\n          self.$video = document.getElementById(self.playerID); // get video width and height\n\n          self.videoWidth = parseInt(self.$video.getAttribute('width'), 10) || 1280;\n          self.videoHeight = parseInt(self.$video.getAttribute('height'), 10) || 720;\n        }\n      } // Vimeo\n\n\n      if ('vimeo' === self.type) {\n        self.playerOptions = {\n          // GDPR Compliance.\n          dnt: 1,\n          id: self.videoID,\n          autopause: 0,\n          transparent: 0,\n          autoplay: self.options.autoplay ? 1 : 0,\n          loop: self.options.loop ? 1 : 0,\n          muted: self.options.mute ? 1 : 0\n        };\n\n        if (self.options.volume) {\n          self.playerOptions.volume = self.options.volume;\n        } // hide controls\n\n\n        if (!self.options.showContols) {\n          self.playerOptions.badge = 0;\n          self.playerOptions.byline = 0;\n          self.playerOptions.portrait = 0;\n          self.playerOptions.title = 0;\n          self.playerOptions.background = 1;\n        }\n\n        if (!self.$video) {\n          let playerOptionsString = '';\n          Object.keys(self.playerOptions).forEach(key => {\n            if ('' !== playerOptionsString) {\n              playerOptionsString += '&';\n            }\n\n            playerOptionsString += `${key}=${encodeURIComponent(self.playerOptions[key])}`;\n          }); // we need to create iframe manually because when we create it using API\n          // js events won't triggers after iframe moved to another place\n\n          self.$video = document.createElement('iframe');\n          self.$video.setAttribute('id', self.playerID);\n          self.$video.setAttribute('src', `https://player.vimeo.com/video/${self.videoID}?${playerOptionsString}`);\n          self.$video.setAttribute('frameborder', '0');\n          self.$video.setAttribute('mozallowfullscreen', '');\n          self.$video.setAttribute('allowfullscreen', '');\n          hiddenDiv.appendChild(self.$video);\n          document.body.appendChild(hiddenDiv);\n        }\n\n        self.player = self.player || new global.Vimeo.Player(self.$video, self.playerOptions); // set current time for autoplay\n\n        if (self.options.startTime && self.options.autoplay) {\n          self.player.setCurrentTime(self.options.startTime);\n        } // get video width and height\n\n\n        self.player.getVideoWidth().then(width => {\n          self.videoWidth = width || 1280;\n        });\n        self.player.getVideoHeight().then(height => {\n          self.videoHeight = height || 720;\n        }); // events\n\n        let vmStarted;\n        self.player.on('timeupdate', e => {\n          if (!vmStarted) {\n            self.fire('started', e);\n            vmStarted = 1;\n          }\n\n          self.fire('timeupdate', e); // check for end of video and play again or stop\n\n          if (self.options.endTime) {\n            if (self.options.endTime && e.seconds >= self.options.endTime) {\n              if (self.options.loop) {\n                self.play(self.options.startTime);\n              } else {\n                self.pause();\n              }\n            }\n          }\n        });\n        self.player.on('play', e => {\n          self.fire('play', e); // check for the start time and start with it\n\n          if (self.options.startTime && 0 === e.seconds) {\n            self.play(self.options.startTime);\n          }\n        });\n        self.player.on('pause', e => {\n          self.fire('pause', e);\n        });\n        self.player.on('ended', e => {\n          self.fire('ended', e);\n        });\n        self.player.on('loaded', e => {\n          self.fire('ready', e);\n        });\n        self.player.on('volumechange', e => {\n          self.fire('volumechange', e);\n        });\n        self.player.on('error', e => {\n          self.fire('error', e);\n        });\n      } // Local\n\n\n      function addSourceToLocal(element, src, type) {\n        const source = document.createElement('source');\n        source.src = src;\n        source.type = type;\n        element.appendChild(source);\n      }\n\n      if ('local' === self.type) {\n        if (!self.$video) {\n          self.$video = document.createElement('video'); // show controls\n\n          if (self.options.showContols) {\n            self.$video.controls = true;\n          } // mute\n\n\n          if (self.options.mute) {\n            self.$video.muted = true;\n          } else if (self.$video.volume) {\n            self.$video.volume = self.options.volume / 100;\n          } // loop\n\n\n          if (self.options.loop) {\n            self.$video.loop = true;\n          } // autoplay enable on mobile devices\n\n\n          self.$video.setAttribute('playsinline', '');\n          self.$video.setAttribute('webkit-playsinline', '');\n          self.$video.setAttribute('id', self.playerID);\n          hiddenDiv.appendChild(self.$video);\n          document.body.appendChild(hiddenDiv);\n          Object.keys(self.videoID).forEach(key => {\n            addSourceToLocal(self.$video, self.videoID[key], `video/${key}`);\n          });\n        }\n\n        self.player = self.player || self.$video;\n        let locStarted;\n        self.player.addEventListener('playing', e => {\n          if (!locStarted) {\n            self.fire('started', e);\n          }\n\n          locStarted = 1;\n        });\n        self.player.addEventListener('timeupdate', function (e) {\n          self.fire('timeupdate', e); // check for end of video and play again or stop\n\n          if (self.options.endTime) {\n            if (self.options.endTime && this.currentTime >= self.options.endTime) {\n              if (self.options.loop) {\n                self.play(self.options.startTime);\n              } else {\n                self.pause();\n              }\n            }\n          }\n        });\n        self.player.addEventListener('play', e => {\n          self.fire('play', e);\n        });\n        self.player.addEventListener('pause', e => {\n          self.fire('pause', e);\n        });\n        self.player.addEventListener('ended', e => {\n          self.fire('ended', e);\n        });\n        self.player.addEventListener('loadedmetadata', function () {\n          // get video width and height\n          self.videoWidth = this.videoWidth || 1280;\n          self.videoHeight = this.videoHeight || 720;\n          self.fire('ready'); // autoplay\n\n          if (self.options.autoplay) {\n            self.play(self.options.startTime);\n          }\n        });\n        self.player.addEventListener('volumechange', e => {\n          self.getVolume(volume => {\n            self.options.volume = volume;\n          });\n          self.fire('volumechange', e);\n        });\n        self.player.addEventListener('error', e => {\n          self.fire('error', e);\n        });\n      }\n\n      callback(self.$video);\n    });\n  }\n\n  init() {\n    const self = this;\n    self.playerID = `VideoWorker-${self.ID}`;\n  }\n\n  loadAPI() {\n    const self = this;\n\n    if (YoutubeAPIadded && VimeoAPIadded) {\n      return;\n    }\n\n    let src = ''; // load Youtube API\n\n    if ('youtube' === self.type && !YoutubeAPIadded) {\n      YoutubeAPIadded = 1;\n      src = 'https://www.youtube.com/iframe_api';\n    } // load Vimeo API\n\n\n    if ('vimeo' === self.type && !VimeoAPIadded) {\n      VimeoAPIadded = 1; // Useful when Vimeo API added using RequireJS https://github.com/nk-o/video-worker/pull/7\n\n      if ('undefined' !== typeof global.Vimeo) {\n        return;\n      }\n\n      src = 'https://player.vimeo.com/api/player.js';\n    }\n\n    if (!src) {\n      return;\n    } // add script in head section\n\n\n    let tag = document.createElement('script');\n    let head = document.getElementsByTagName('head')[0];\n    tag.src = src;\n    head.appendChild(tag);\n    head = null;\n    tag = null;\n  }\n\n  onAPIready(callback) {\n    const self = this; // Youtube\n\n    if ('youtube' === self.type) {\n      // Listen for global YT player callback\n      if (('undefined' === typeof global.YT || 0 === global.YT.loaded) && !loadingYoutubePlayer) {\n        // Prevents Ready event from being called twice\n        loadingYoutubePlayer = 1; // Creates deferred so, other players know when to wait.\n\n        window.onYouTubeIframeAPIReady = function () {\n          window.onYouTubeIframeAPIReady = null;\n          loadingYoutubeDefer.resolve('done');\n          callback();\n        };\n      } else if ('object' === typeof global.YT && 1 === global.YT.loaded) {\n        callback();\n      } else {\n        loadingYoutubeDefer.done(() => {\n          callback();\n        });\n      }\n    } // Vimeo\n\n\n    if ('vimeo' === self.type) {\n      if ('undefined' === typeof global.Vimeo && !loadingVimeoPlayer) {\n        loadingVimeoPlayer = 1;\n        const vimeoInterval = setInterval(() => {\n          if ('undefined' !== typeof global.Vimeo) {\n            clearInterval(vimeoInterval);\n            loadingVimeoDefer.resolve('done');\n            callback();\n          }\n        }, 20);\n      } else if ('undefined' !== typeof global.Vimeo) {\n        callback();\n      } else {\n        loadingVimeoDefer.done(() => {\n          callback();\n        });\n      }\n    } // Local\n\n\n    if ('local' === self.type) {\n      callback();\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Issa/web/theFront/reactthefront/theFront-v3.2.2/react-scripts/node_modules/video-worker/src/video-worker.esm.js"],"names":["global","Deferred","doneCallbacks","failCallbacks","prototype","execute","list","args","i","length","Array","slice","call","apply","resolve","reject","done","callback","push","fail","ID","YoutubeAPIadded","VimeoAPIadded","loadingYoutubePlayer","loadingVimeoPlayer","loadingYoutubeDefer","loadingVimeoDefer","VideoWorker","constructor","url","options","self","options_default","autoplay","loop","mute","volume","showContols","startTime","endTime","extend","videoID","parseURL","loadAPI","init","out","Object","keys","forEach","key","getYoutubeID","ytUrl","regExp","match","getVimeoID","vmUrl","getLocalVideos","locUrl","videoFormats","split","result","ready","val","Youtube","Vimeo","Local","type","isValid","on","name","userEventsList","off","fire","play","start","player","playVideo","seekTo","YT","PlayerState","PLAYING","getPlayerState","setCurrentTime","getPaused","then","paused","currentTime","pause","pauseVideo","setVolume","$video","muted","unmute","unMute","getVolume","getMuted","isMuted","getImageURL","videoImage","availableSizes","step","tempImg","Image","onload","naturalWidth","width","src","request","XMLHttpRequest","open","onreadystatechange","readyState","status","response","JSON","parse","responseText","thumbnail_large","send","getIframe","getVideo","onAPIready","hiddenDiv","document","createElement","style","display","playerOptions","host","videoId","playerVars","autohide","rel","playsinline","iv_load_policy","modestbranding","controls","showinfo","disablekb","ytStarted","ytProgressInterval","events","onReady","e","target","secondsOffset","getDuration","setInterval","onStateChange","data","ENDED","PAUSED","getCurrentTime","clearInterval","onError","firstInit","div","setAttribute","playerID","appendChild","body","Player","getElementById","videoWidth","parseInt","getAttribute","videoHeight","dnt","id","autopause","transparent","badge","byline","portrait","title","background","playerOptionsString","encodeURIComponent","getVideoWidth","getVideoHeight","height","vmStarted","seconds","addSourceToLocal","element","source","locStarted","addEventListener","tag","head","getElementsByTagName","loaded","window","onYouTubeIframeAPIReady","vimeoInterval"],"mappings":"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","sourcesContent":["import global from 'global';\n\n// Deferred\n// thanks http://stackoverflow.com/questions/18096715/implement-deferred-object-without-using-jquery\nfunction Deferred() {\n    this.doneCallbacks = [];\n    this.failCallbacks = [];\n}\n\nDeferred.prototype = {\n    execute( list, args ) {\n        let i = list.length;\n        args = Array.prototype.slice.call( args );\n\n        while ( i ) {\n            i -= 1;\n            list[ i ].apply( null, args );\n        }\n    },\n    resolve( ...args ) {\n        this.execute( this.doneCallbacks, args );\n    },\n    reject( ...args ) {\n        this.execute( this.failCallbacks, args );\n    },\n    done( callback ) {\n        this.doneCallbacks.push( callback );\n    },\n    fail( callback ) {\n        this.failCallbacks.push( callback );\n    },\n};\n\nlet ID = 0;\nlet YoutubeAPIadded = 0;\nlet VimeoAPIadded = 0;\nlet loadingYoutubePlayer = 0;\nlet loadingVimeoPlayer = 0;\nconst loadingYoutubeDefer = new Deferred();\nconst loadingVimeoDefer = new Deferred();\n\nexport default class VideoWorker {\n    constructor( url, options ) {\n        const self = this;\n\n        self.url = url;\n\n        self.options_default = {\n            autoplay: false,\n            loop: false,\n            mute: false,\n            volume: 100,\n            showContols: true,\n\n            // start / end video time in seconds\n            startTime: 0,\n            endTime: 0,\n        };\n\n        self.options = self.extend( {}, self.options_default, options );\n\n        // check URL\n        self.videoID = self.parseURL( url );\n\n        // init\n        if ( self.videoID ) {\n            self.ID = ID;\n            ID += 1;\n            self.loadAPI();\n            self.init();\n        }\n    }\n\n    // Extend like jQuery.extend\n    // eslint-disable-next-line class-methods-use-this\n    extend( ...args ) {\n        const out = args[ 0 ] || {};\n\n        Object.keys( args ).forEach( ( i ) => {\n            if ( ! args[ i ] ) {\n                return;\n            }\n            Object.keys( args[ i ] ).forEach( ( key ) => {\n                out[ key ] = args[ i ][ key ];\n            } );\n        } );\n\n        return out;\n    }\n\n    parseURL( url ) {\n        // parse youtube ID\n        function getYoutubeID( ytUrl ) {\n            // eslint-disable-next-line no-useless-escape\n            const regExp = /.*(?:youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=)([^#\\&\\?]*).*/;\n            const match = ytUrl.match( regExp );\n            return match && 11 === match[ 1 ].length ? match[ 1 ] : false;\n        }\n\n        // parse vimeo ID\n        function getVimeoID( vmUrl ) {\n            // eslint-disable-next-line no-useless-escape\n            const regExp = /https?:\\/\\/(?:www\\.|player\\.)?vimeo.com\\/(?:channels\\/(?:\\w+\\/)?|groups\\/([^\\/]*)\\/videos\\/|album\\/(\\d+)\\/video\\/|video\\/|)(\\d+)(?:$|\\/|\\?)/;\n            const match = vmUrl.match( regExp );\n            return match && match[ 3 ] ? match[ 3 ] : false;\n        }\n\n        // parse local string\n        function getLocalVideos( locUrl ) {\n            // eslint-disable-next-line no-useless-escape\n            const videoFormats = locUrl.split( /,(?=mp4\\:|webm\\:|ogv\\:|ogg\\:)/ );\n            const result = {};\n            let ready = 0;\n            videoFormats.forEach( ( val ) => {\n                // eslint-disable-next-line no-useless-escape\n                const match = val.match( /^(mp4|webm|ogv|ogg)\\:(.*)/ );\n                if ( match && match[ 1 ] && match[ 2 ] ) {\n                    // eslint-disable-next-line prefer-destructuring\n                    result[ 'ogv' === match[ 1 ] ? 'ogg' : match[ 1 ] ] = match[ 2 ];\n                    ready = 1;\n                }\n            } );\n            return ready ? result : false;\n        }\n\n        const Youtube = getYoutubeID( url );\n        const Vimeo = getVimeoID( url );\n        const Local = getLocalVideos( url );\n\n        if ( Youtube ) {\n            this.type = 'youtube';\n            return Youtube;\n        }\n\n        if ( Vimeo ) {\n            this.type = 'vimeo';\n            return Vimeo;\n        }\n\n        if ( Local ) {\n            this.type = 'local';\n            return Local;\n        }\n\n        return false;\n    }\n\n    isValid() {\n        return !! this.videoID;\n    }\n\n    // events\n    on( name, callback ) {\n        this.userEventsList = this.userEventsList || [];\n\n        // add new callback in events list\n        ( this.userEventsList[ name ] || ( this.userEventsList[ name ] = [] ) ).push( callback );\n    }\n\n    off( name, callback ) {\n        if ( ! this.userEventsList || ! this.userEventsList[ name ] ) {\n            return;\n        }\n\n        if ( ! callback ) {\n            delete this.userEventsList[ name ];\n        } else {\n            this.userEventsList[ name ].forEach( ( val, key ) => {\n                if ( val === callback ) {\n                    this.userEventsList[ name ][ key ] = false;\n                }\n            } );\n        }\n    }\n\n    fire( name, ...args ) {\n        if ( this.userEventsList && 'undefined' !== typeof this.userEventsList[ name ] ) {\n            this.userEventsList[ name ].forEach( ( val ) => {\n                // call with all arguments\n                if ( val ) {\n                    val.apply( this, args );\n                }\n            } );\n        }\n    }\n\n    play( start ) {\n        const self = this;\n        if ( ! self.player ) {\n            return;\n        }\n\n        if ( 'youtube' === self.type && self.player.playVideo ) {\n            if ( 'undefined' !== typeof start ) {\n                self.player.seekTo( start || 0 );\n            }\n            if ( global.YT.PlayerState.PLAYING !== self.player.getPlayerState() ) {\n                self.player.playVideo();\n            }\n        }\n\n        if ( 'vimeo' === self.type ) {\n            if ( 'undefined' !== typeof start ) {\n                self.player.setCurrentTime( start );\n            }\n            self.player.getPaused().then( ( paused ) => {\n                if ( paused ) {\n                    self.player.play();\n                }\n            } );\n        }\n\n        if ( 'local' === self.type ) {\n            if ( 'undefined' !== typeof start ) {\n                self.player.currentTime = start;\n            }\n            if ( self.player.paused ) {\n                self.player.play();\n            }\n        }\n    }\n\n    pause() {\n        const self = this;\n        if ( ! self.player ) {\n            return;\n        }\n\n        if ( 'youtube' === self.type && self.player.pauseVideo ) {\n            if ( global.YT.PlayerState.PLAYING === self.player.getPlayerState() ) {\n                self.player.pauseVideo();\n            }\n        }\n\n        if ( 'vimeo' === self.type ) {\n            self.player.getPaused().then( ( paused ) => {\n                if ( ! paused ) {\n                    self.player.pause();\n                }\n            } );\n        }\n\n        if ( 'local' === self.type ) {\n            if ( ! self.player.paused ) {\n                self.player.pause();\n            }\n        }\n    }\n\n    mute() {\n        const self = this;\n        if ( ! self.player ) {\n            return;\n        }\n\n        if ( 'youtube' === self.type && self.player.mute ) {\n            self.player.mute();\n        }\n\n        if ( 'vimeo' === self.type && self.player.setVolume ) {\n            self.player.setVolume( 0 );\n        }\n\n        if ( 'local' === self.type ) {\n            self.$video.muted = true;\n        }\n    }\n\n    unmute() {\n        const self = this;\n        if ( ! self.player ) {\n            return;\n        }\n\n        if ( 'youtube' === self.type && self.player.mute ) {\n            self.player.unMute();\n        }\n\n        if ( 'vimeo' === self.type && self.player.setVolume ) {\n            self.player.setVolume( self.options.volume );\n        }\n\n        if ( 'local' === self.type ) {\n            self.$video.muted = false;\n        }\n    }\n\n    setVolume( volume = false ) {\n        const self = this;\n        if ( ! self.player || ! volume ) {\n            return;\n        }\n\n        if ( 'youtube' === self.type && self.player.setVolume ) {\n            self.player.setVolume( volume );\n        }\n\n        if ( 'vimeo' === self.type && self.player.setVolume ) {\n            self.player.setVolume( volume );\n        }\n\n        if ( 'local' === self.type ) {\n            self.$video.volume = volume / 100;\n        }\n    }\n\n    getVolume( callback ) {\n        const self = this;\n        if ( ! self.player ) {\n            callback( false );\n            return;\n        }\n\n        if ( 'youtube' === self.type && self.player.getVolume ) {\n            callback( self.player.getVolume() );\n        }\n\n        if ( 'vimeo' === self.type && self.player.getVolume ) {\n            self.player.getVolume().then( ( volume ) => {\n                callback( volume );\n            } );\n        }\n\n        if ( 'local' === self.type ) {\n            callback( self.$video.volume * 100 );\n        }\n    }\n\n    getMuted( callback ) {\n        const self = this;\n        if ( ! self.player ) {\n            callback( null );\n            return;\n        }\n\n        if ( 'youtube' === self.type && self.player.isMuted ) {\n            callback( self.player.isMuted() );\n        }\n\n        if ( 'vimeo' === self.type && self.player.getVolume ) {\n            self.player.getVolume().then( ( volume ) => {\n                callback( !! volume );\n            } );\n        }\n\n        if ( 'local' === self.type ) {\n            callback( self.$video.muted );\n        }\n    }\n\n    getImageURL( callback ) {\n        const self = this;\n\n        if ( self.videoImage ) {\n            callback( self.videoImage );\n            return;\n        }\n\n        if ( 'youtube' === self.type ) {\n            const availableSizes = [\n                'maxresdefault',\n                'sddefault',\n                'hqdefault',\n                '0',\n            ];\n            let step = 0;\n\n            const tempImg = new Image();\n            tempImg.onload = function() {\n                // if no thumbnail, youtube add their own image with width = 120px\n                if ( 120 !== ( this.naturalWidth || this.width ) || step === availableSizes.length - 1 ) {\n                    // ok\n                    self.videoImage = `https://img.youtube.com/vi/${ self.videoID }/${ availableSizes[ step ] }.jpg`;\n                    callback( self.videoImage );\n                } else {\n                    // try another size\n                    step += 1;\n                    this.src = `https://img.youtube.com/vi/${ self.videoID }/${ availableSizes[ step ] }.jpg`;\n                }\n            };\n            tempImg.src = `https://img.youtube.com/vi/${ self.videoID }/${ availableSizes[ step ] }.jpg`;\n        }\n\n        if ( 'vimeo' === self.type ) {\n            let request = new XMLHttpRequest();\n            request.open( 'GET', `https://vimeo.com/api/v2/video/${ self.videoID }.json`, true );\n            request.onreadystatechange = function() {\n                if ( 4 === this.readyState ) {\n                    if ( 200 <= this.status && 400 > this.status ) {\n                        // Success!\n                        const response = JSON.parse( this.responseText );\n                        self.videoImage = response[ 0 ].thumbnail_large;\n                        callback( self.videoImage );\n                    } else {\n                        // Error :(\n                    }\n                }\n            };\n            request.send();\n            request = null;\n        }\n    }\n\n    // fallback to the old version.\n    getIframe( callback ) {\n        this.getVideo( callback );\n    }\n\n    getVideo( callback ) {\n        const self = this;\n\n        // return generated video block\n        if ( self.$video ) {\n            callback( self.$video );\n            return;\n        }\n\n        // generate new video block\n        self.onAPIready( () => {\n            let hiddenDiv;\n            if ( ! self.$video ) {\n                hiddenDiv = document.createElement( 'div' );\n                hiddenDiv.style.display = 'none';\n            }\n\n            // Youtube\n            if ( 'youtube' === self.type ) {\n                self.playerOptions = {\n                    // GDPR Compliance.\n                    host: 'https://www.youtube-nocookie.com',\n                    videoId: self.videoID,\n                    playerVars: {\n                        autohide: 1,\n                        rel: 0,\n                        autoplay: 0,\n                        // autoplay enable on mobile devices\n                        playsinline: 1,\n                    },\n                };\n\n                // hide controls\n                if ( ! self.options.showContols ) {\n                    self.playerOptions.playerVars.iv_load_policy = 3;\n                    self.playerOptions.playerVars.modestbranding = 1;\n                    self.playerOptions.playerVars.controls = 0;\n                    self.playerOptions.playerVars.showinfo = 0;\n                    self.playerOptions.playerVars.disablekb = 1;\n                }\n\n                // events\n                let ytStarted;\n                let ytProgressInterval;\n                self.playerOptions.events = {\n                    onReady( e ) {\n                        // mute\n                        if ( self.options.mute ) {\n                            e.target.mute();\n                        } else if ( self.options.volume ) {\n                            e.target.setVolume( self.options.volume );\n                        }\n\n                        // autoplay\n                        if ( self.options.autoplay ) {\n                            self.play( self.options.startTime );\n                        }\n                        self.fire( 'ready', e );\n\n                        // For seamless loops, set the endTime to 0.1 seconds less than the video's duration\n                        // https://github.com/nk-o/video-worker/issues/2\n                        if ( self.options.loop && ! self.options.endTime ) {\n                            const secondsOffset = 0.1;\n                            self.options.endTime = self.player.getDuration() - secondsOffset;\n                        }\n\n                        // volumechange\n                        setInterval( () => {\n                            self.getVolume( ( volume ) => {\n                                if ( self.options.volume !== volume ) {\n                                    self.options.volume = volume;\n                                    self.fire( 'volumechange', e );\n                                }\n                            } );\n                        }, 150 );\n                    },\n                    onStateChange( e ) {\n                        // loop\n                        if ( self.options.loop && e.data === global.YT.PlayerState.ENDED ) {\n                            self.play( self.options.startTime );\n                        }\n                        if ( ! ytStarted && e.data === global.YT.PlayerState.PLAYING ) {\n                            ytStarted = 1;\n                            self.fire( 'started', e );\n                        }\n                        if ( e.data === global.YT.PlayerState.PLAYING ) {\n                            self.fire( 'play', e );\n                        }\n                        if ( e.data === global.YT.PlayerState.PAUSED ) {\n                            self.fire( 'pause', e );\n                        }\n                        if ( e.data === global.YT.PlayerState.ENDED ) {\n                            self.fire( 'ended', e );\n                        }\n\n                        // progress check\n                        if ( e.data === global.YT.PlayerState.PLAYING ) {\n                            ytProgressInterval = setInterval( () => {\n                                self.fire( 'timeupdate', e );\n\n                                // check for end of video and play again or stop\n                                if ( self.options.endTime && self.player.getCurrentTime() >= self.options.endTime ) {\n                                    if ( self.options.loop ) {\n                                        self.play( self.options.startTime );\n                                    } else {\n                                        self.pause();\n                                    }\n                                }\n                            }, 150 );\n                        } else {\n                            clearInterval( ytProgressInterval );\n                        }\n                    },\n                    onError( e ) {\n                        self.fire( 'error', e );\n                    },\n                };\n\n                const firstInit = ! self.$video;\n                if ( firstInit ) {\n                    const div = document.createElement( 'div' );\n                    div.setAttribute( 'id', self.playerID );\n                    hiddenDiv.appendChild( div );\n                    document.body.appendChild( hiddenDiv );\n                }\n                self.player = self.player || new global.YT.Player( self.playerID, self.playerOptions );\n                if ( firstInit ) {\n                    self.$video = document.getElementById( self.playerID );\n\n                    // get video width and height\n                    self.videoWidth = parseInt( self.$video.getAttribute( 'width' ), 10 ) || 1280;\n                    self.videoHeight = parseInt( self.$video.getAttribute( 'height' ), 10 ) || 720;\n                }\n            }\n\n            // Vimeo\n            if ( 'vimeo' === self.type ) {\n                self.playerOptions = {\n                    // GDPR Compliance.\n                    dnt: 1,\n                    id: self.videoID,\n                    autopause: 0,\n                    transparent: 0,\n                    autoplay: self.options.autoplay ? 1 : 0,\n                    loop: self.options.loop ? 1 : 0,\n                    muted: self.options.mute ? 1 : 0,\n                };\n\n                if ( self.options.volume ) {\n                    self.playerOptions.volume = self.options.volume;\n                }\n\n                // hide controls\n                if ( ! self.options.showContols ) {\n                    self.playerOptions.badge = 0;\n                    self.playerOptions.byline = 0;\n                    self.playerOptions.portrait = 0;\n                    self.playerOptions.title = 0;\n                    self.playerOptions.background = 1;\n                }\n\n                if ( ! self.$video ) {\n                    let playerOptionsString = '';\n                    Object.keys( self.playerOptions ).forEach( ( key ) => {\n                        if ( '' !== playerOptionsString ) {\n                            playerOptionsString += '&';\n                        }\n                        playerOptionsString += `${ key }=${ encodeURIComponent( self.playerOptions[ key ] ) }`;\n                    } );\n\n                    // we need to create iframe manually because when we create it using API\n                    // js events won't triggers after iframe moved to another place\n                    self.$video = document.createElement( 'iframe' );\n                    self.$video.setAttribute( 'id', self.playerID );\n                    self.$video.setAttribute( 'src', `https://player.vimeo.com/video/${ self.videoID }?${ playerOptionsString }` );\n                    self.$video.setAttribute( 'frameborder', '0' );\n                    self.$video.setAttribute( 'mozallowfullscreen', '' );\n                    self.$video.setAttribute( 'allowfullscreen', '' );\n\n                    hiddenDiv.appendChild( self.$video );\n                    document.body.appendChild( hiddenDiv );\n                }\n                self.player = self.player || new global.Vimeo.Player( self.$video, self.playerOptions );\n\n                // set current time for autoplay\n                if ( self.options.startTime && self.options.autoplay ) {\n                    self.player.setCurrentTime( self.options.startTime );\n                }\n\n                // get video width and height\n                self.player.getVideoWidth().then( ( width ) => {\n                    self.videoWidth = width || 1280;\n                } );\n                self.player.getVideoHeight().then( ( height ) => {\n                    self.videoHeight = height || 720;\n                } );\n\n                // events\n                let vmStarted;\n                self.player.on( 'timeupdate', ( e ) => {\n                    if ( ! vmStarted ) {\n                        self.fire( 'started', e );\n                        vmStarted = 1;\n                    }\n\n                    self.fire( 'timeupdate', e );\n\n                    // check for end of video and play again or stop\n                    if ( self.options.endTime ) {\n                        if ( self.options.endTime && e.seconds >= self.options.endTime ) {\n                            if ( self.options.loop ) {\n                                self.play( self.options.startTime );\n                            } else {\n                                self.pause();\n                            }\n                        }\n                    }\n                } );\n                self.player.on( 'play', ( e ) => {\n                    self.fire( 'play', e );\n\n                    // check for the start time and start with it\n                    if ( self.options.startTime && 0 === e.seconds ) {\n                        self.play( self.options.startTime );\n                    }\n                } );\n                self.player.on( 'pause', ( e ) => {\n                    self.fire( 'pause', e );\n                } );\n                self.player.on( 'ended', ( e ) => {\n                    self.fire( 'ended', e );\n                } );\n                self.player.on( 'loaded', ( e ) => {\n                    self.fire( 'ready', e );\n                } );\n                self.player.on( 'volumechange', ( e ) => {\n                    self.fire( 'volumechange', e );\n                } );\n                self.player.on( 'error', ( e ) => {\n                    self.fire( 'error', e );\n                } );\n            }\n\n            // Local\n            function addSourceToLocal( element, src, type ) {\n                const source = document.createElement( 'source' );\n                source.src = src;\n                source.type = type;\n                element.appendChild( source );\n            }\n            if ( 'local' === self.type ) {\n                if ( ! self.$video ) {\n                    self.$video = document.createElement( 'video' );\n\n                    // show controls\n                    if ( self.options.showContols ) {\n                        self.$video.controls = true;\n                    }\n\n                    // mute\n                    if ( self.options.mute ) {\n                        self.$video.muted = true;\n                    } else if ( self.$video.volume ) {\n                        self.$video.volume = self.options.volume / 100;\n                    }\n\n                    // loop\n                    if ( self.options.loop ) {\n                        self.$video.loop = true;\n                    }\n\n                    // autoplay enable on mobile devices\n                    self.$video.setAttribute( 'playsinline', '' );\n                    self.$video.setAttribute( 'webkit-playsinline', '' );\n\n                    self.$video.setAttribute( 'id', self.playerID );\n                    hiddenDiv.appendChild( self.$video );\n                    document.body.appendChild( hiddenDiv );\n\n                    Object.keys( self.videoID ).forEach( ( key ) => {\n                        addSourceToLocal( self.$video, self.videoID[ key ], `video/${ key }` );\n                    } );\n                }\n\n                self.player = self.player || self.$video;\n\n                let locStarted;\n                self.player.addEventListener( 'playing', ( e ) => {\n                    if ( ! locStarted ) {\n                        self.fire( 'started', e );\n                    }\n                    locStarted = 1;\n                } );\n                self.player.addEventListener( 'timeupdate', function( e ) {\n                    self.fire( 'timeupdate', e );\n\n                    // check for end of video and play again or stop\n                    if ( self.options.endTime ) {\n                        if ( self.options.endTime && this.currentTime >= self.options.endTime ) {\n                            if ( self.options.loop ) {\n                                self.play( self.options.startTime );\n                            } else {\n                                self.pause();\n                            }\n                        }\n                    }\n                } );\n                self.player.addEventListener( 'play', ( e ) => {\n                    self.fire( 'play', e );\n                } );\n                self.player.addEventListener( 'pause', ( e ) => {\n                    self.fire( 'pause', e );\n                } );\n                self.player.addEventListener( 'ended', ( e ) => {\n                    self.fire( 'ended', e );\n                } );\n                self.player.addEventListener( 'loadedmetadata', function() {\n                    // get video width and height\n                    self.videoWidth = this.videoWidth || 1280;\n                    self.videoHeight = this.videoHeight || 720;\n\n                    self.fire( 'ready' );\n\n                    // autoplay\n                    if ( self.options.autoplay ) {\n                        self.play( self.options.startTime );\n                    }\n                } );\n                self.player.addEventListener( 'volumechange', ( e ) => {\n                    self.getVolume( ( volume ) => {\n                        self.options.volume = volume;\n                    } );\n                    self.fire( 'volumechange', e );\n                } );\n                self.player.addEventListener( 'error', ( e ) => {\n                    self.fire( 'error', e );\n                } );\n            }\n            callback( self.$video );\n        } );\n    }\n\n    init() {\n        const self = this;\n\n        self.playerID = `VideoWorker-${ self.ID }`;\n    }\n\n    loadAPI() {\n        const self = this;\n\n        if ( YoutubeAPIadded && VimeoAPIadded ) {\n            return;\n        }\n\n        let src = '';\n\n        // load Youtube API\n        if ( 'youtube' === self.type && ! YoutubeAPIadded ) {\n            YoutubeAPIadded = 1;\n            src = 'https://www.youtube.com/iframe_api';\n        }\n\n        // load Vimeo API\n        if ( 'vimeo' === self.type && ! VimeoAPIadded ) {\n            VimeoAPIadded = 1;\n\n            // Useful when Vimeo API added using RequireJS https://github.com/nk-o/video-worker/pull/7\n            if ( 'undefined' !== typeof global.Vimeo ) {\n                return;\n            }\n\n            src = 'https://player.vimeo.com/api/player.js';\n        }\n\n        if ( ! src ) {\n            return;\n        }\n\n        // add script in head section\n        let tag = document.createElement( 'script' );\n        let head = document.getElementsByTagName( 'head' )[ 0 ];\n        tag.src = src;\n\n        head.appendChild( tag );\n\n        head = null;\n        tag = null;\n    }\n\n    onAPIready( callback ) {\n        const self = this;\n\n        // Youtube\n        if ( 'youtube' === self.type ) {\n            // Listen for global YT player callback\n            if ( ( 'undefined' === typeof global.YT || 0 === global.YT.loaded ) && ! loadingYoutubePlayer ) {\n                // Prevents Ready event from being called twice\n                loadingYoutubePlayer = 1;\n\n                // Creates deferred so, other players know when to wait.\n                window.onYouTubeIframeAPIReady = function() {\n                    window.onYouTubeIframeAPIReady = null;\n                    loadingYoutubeDefer.resolve( 'done' );\n                    callback();\n                };\n            } else if ( 'object' === typeof global.YT && 1 === global.YT.loaded ) {\n                callback();\n            } else {\n                loadingYoutubeDefer.done( () => {\n                    callback();\n                } );\n            }\n        }\n\n        // Vimeo\n        if ( 'vimeo' === self.type ) {\n            if ( 'undefined' === typeof global.Vimeo && ! loadingVimeoPlayer ) {\n                loadingVimeoPlayer = 1;\n                const vimeoInterval = setInterval( () => {\n                    if ( 'undefined' !== typeof global.Vimeo ) {\n                        clearInterval( vimeoInterval );\n                        loadingVimeoDefer.resolve( 'done' );\n                        callback();\n                    }\n                }, 20 );\n            } else if ( 'undefined' !== typeof global.Vimeo ) {\n                callback();\n            } else {\n                loadingVimeoDefer.done( () => {\n                    callback();\n                } );\n            }\n        }\n\n        // Local\n        if ( 'local' === self.type ) {\n            callback();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}