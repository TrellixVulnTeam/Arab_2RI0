{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Issa\\\\web\\\\Ara\\\\theFront-v3.2.2\\\\react-scripts\\\\src\\\\views\\\\HelpCenterArticle\\\\components\\\\Questions\\\\Questions.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, List, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport { IconAlternate } from 'components/molecules';\nimport { Accordion } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  title: {\n    fontWeight: 'bold'\n  },\n  accordionGrid: {\n    '& .accordion__item-wrapper': {\n      boxShadow: '0 1.5rem 4rem rgba(22,28,45,.05)'\n    }\n  },\n  fontWeightBold: {\n    fontWeight: 'bold'\n  },\n  fontWeight300: {\n    fontWeight: 300\n  },\n  listItemAvatar: {\n    marginRight: theme.spacing(2)\n  },\n  listItemText: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  answerCount: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1),\n    background: theme.palette.secondary.light,\n    color: 'white',\n    fontWeight: 700\n  }\n}));\n\nconst Questions = props => {\n  _s();\n\n  const {\n    data,\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            disableGutters: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              className: classes.listItemAvatar,\n              children: /*#__PURE__*/_jsxDEV(IconAlternate, {\n                fontIconClass: data.icon,\n                size: \"medium\",\n                color: data.color,\n                shape: \"circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: data.title,\n              secondary: data.subtitle,\n              primaryTypographyProps: {\n                variant: 'h6'\n              },\n              secondaryTypographyProps: {\n                variant: 'h6'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            disableGutters: true,\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              className: classes.listItemText,\n              primary: \"Last updated 2 weeks ago\",\n              secondary: `${data.items.length} answers`,\n              primaryTypographyProps: {\n                variant: 'subtitle1',\n                color: 'textSecondary'\n              },\n              secondaryTypographyProps: {\n                variant: 'body1',\n                className: classes.answerCount\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.accordionGrid,\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          items: data.items,\n          titleProps: {\n            variant: 'subtitle1',\n            className: classes.fontWeightBold\n          },\n          subtitleProps: {\n            className: classes.fontWeight300\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Questions, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Questions;\nQuestions.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.object.isRequired\n};\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["C:/Users/Issa/web/Ara/theFront-v3.2.2/react-scripts/src/views/HelpCenterArticle/components/Questions/Questions.js"],"names":["React","PropTypes","makeStyles","Grid","List","ListItem","ListItemAvatar","ListItemText","IconAlternate","Accordion","useStyles","theme","title","fontWeight","accordionGrid","boxShadow","fontWeightBold","fontWeight300","listItemAvatar","marginRight","spacing","listItemText","display","justifyContent","alignItems","flexWrap","answerCount","padding","borderRadius","background","palette","secondary","light","color","Questions","props","data","className","rest","classes","icon","subtitle","variant","items","length","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from '@material-ui/core';\nimport { IconAlternate } from 'components/molecules';\nimport { Accordion } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    fontWeight: 'bold',\n  },\n  accordionGrid: {\n    '& .accordion__item-wrapper': {\n      boxShadow: '0 1.5rem 4rem rgba(22,28,45,.05)',\n    },\n  },\n  fontWeightBold: {\n    fontWeight: 'bold',\n  },\n  fontWeight300: {\n    fontWeight: 300,\n  },\n  listItemAvatar: {\n    marginRight: theme.spacing(2),\n  },\n  listItemText: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  answerCount: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1),\n    background: theme.palette.secondary.light,\n    color: 'white',\n    fontWeight: 700,\n  },\n}));\n\nconst Questions = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n  return (\n    <div className={className} {...rest}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <List>\n            <ListItem disableGutters>\n              <ListItemAvatar className={classes.listItemAvatar}>\n                <IconAlternate\n                  fontIconClass={data.icon}\n                  size=\"medium\"\n                  color={data.color}\n                  shape=\"circle\"\n                />\n              </ListItemAvatar>\n              <ListItemText\n                primary={data.title}\n                secondary={data.subtitle}\n                primaryTypographyProps={{\n                  variant: 'h6',\n                }}\n                secondaryTypographyProps={{\n                  variant: 'h6',\n                }}\n              />\n            </ListItem>\n            <ListItem disableGutters>\n              <ListItemText\n                className={classes.listItemText}\n                primary=\"Last updated 2 weeks ago\"\n                secondary={`${data.items.length} answers`}\n                primaryTypographyProps={{\n                  variant: 'subtitle1',\n                  color: 'textSecondary',\n                }}\n                secondaryTypographyProps={{\n                  variant: 'body1',\n                  className: classes.answerCount,\n                }}\n              />\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid item xs={12} className={classes.accordionGrid}>\n          <Accordion\n            items={data.items}\n            titleProps={{\n              variant: 'subtitle1',\n              className: classes.fontWeightBold,\n            }}\n            subtitleProps={{\n              className: classes.fontWeight300,\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nQuestions.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.object.isRequired,\n};\n\nexport default Questions;\n"]},"metadata":{},"sourceType":"module"}