{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Issa\\\\web\\\\New folder (2)\\\\theFront-v3.2.2\\\\REAct-scripts\\\\src\\\\views\\\\HelpCenterArticle\\\\components\\\\Categories\\\\Categories.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport { IconAlternate, SectionHeader } from 'components/molecules';\nimport { DescriptionListIcon, CardBase } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  answerCount: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1),\n    background: theme.palette.secondary.light,\n    color: 'white',\n    fontWeight: 700,\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst Categories = props => {\n  _s();\n\n  const {\n    data,\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n      title: \"Related Help Center Categories\",\n      subtitle: \"If you didn\\u2019t find what you needed, these could help!\",\n      align: \"left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(CardBase, {\n          liftUp: true,\n          variant: \"outlined\",\n          style: {\n            borderTop: `5px solid ${item.color[500]}`\n          },\n          children: [/*#__PURE__*/_jsxDEV(DescriptionListIcon, {\n            icon: /*#__PURE__*/_jsxDEV(IconAlternate, {\n              fontIconClass: item.icon,\n              color: item.color,\n              shape: \"circle\",\n              size: \"medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this),\n            title: item.title,\n            subtitle: item.subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            className: classes.answerCount,\n            children: \"8 answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Categories, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Categories;\nCategories.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired\n};\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["C:/Users/Issa/web/New folder (2)/theFront-v3.2.2/REAct-scripts/src/views/HelpCenterArticle/components/Categories/Categories.js"],"names":["React","PropTypes","makeStyles","Grid","Typography","IconAlternate","SectionHeader","DescriptionListIcon","CardBase","useStyles","theme","answerCount","padding","spacing","borderRadius","background","palette","secondary","light","color","fontWeight","marginTop","Categories","props","data","className","rest","classes","map","item","index","borderTop","icon","title","subtitle","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport { IconAlternate, SectionHeader } from 'components/molecules';\nimport { DescriptionListIcon, CardBase } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  answerCount: {\n    padding: theme.spacing(1 / 2, 1),\n    borderRadius: theme.spacing(1),\n    background: theme.palette.secondary.light,\n    color: 'white',\n    fontWeight: 700,\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst Categories = props => {\n  const { data, className, ...rest } = props;\n  const classes = useStyles();\n  return (\n    <div className={className} {...rest}>\n      <SectionHeader\n        title=\"Related Help Center Categories\"\n        subtitle=\"If you didnâ€™t find what you needed, these could help!\"\n        align=\"left\"\n      />\n      <Grid container spacing={2}>\n        {data.map((item, index) => (\n          <Grid item xs={12} sm={12} md={4} key={index}>\n            <CardBase\n              liftUp\n              variant=\"outlined\"\n              style={{ borderTop: `5px solid ${item.color[500]}` }}\n            >\n              <DescriptionListIcon\n                icon={\n                  <IconAlternate\n                    fontIconClass={item.icon}\n                    color={item.color}\n                    shape=\"circle\"\n                    size=\"medium\"\n                  />\n                }\n                title={item.title}\n                subtitle={item.subtitle}\n              />\n              <Typography variant=\"body1\" className={classes.answerCount}>\n                8 answers\n              </Typography>\n            </CardBase>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nCategories.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * data to be rendered\n   */\n  data: PropTypes.array.isRequired,\n};\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}