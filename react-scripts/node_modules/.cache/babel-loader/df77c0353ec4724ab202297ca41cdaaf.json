{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Issa\\\\web\\\\New folder (2)\\\\theFront-v3.2.2\\\\REAct-scripts\\\\src\\\\components\\\\organisms\\\\CardJob\\\\CardJob.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, ListItem, ListItemAvatar, Avatar, ListItemText } from '@material-ui/core';\nimport { CardBase } from 'components/organisms';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%'\n  },\n  dot: {\n    display: 'inline-block',\n    width: theme.spacing(1),\n    height: theme.spacing(1),\n    background: theme.palette.text.primary,\n    borderRadius: '100%',\n    marginRight: theme.spacing(1)\n  },\n  dotBig: {\n    width: theme.spacing(2),\n    height: theme.spacing(2)\n  },\n  dotSmall: {\n    width: theme.spacing(1 / 2),\n    height: theme.spacing(1 / 2)\n  },\n  jobTitle: {\n    fontWeight: 700\n  },\n  dotMargin: {\n    margin: theme.spacing(0, 1)\n  }\n}));\n/**\n * Component to display the job card\n *\n * @param {Object} props\n */\n\nconst CardJob = props => {\n  _s();\n\n  const {\n    badgeColor,\n    badgeTitle,\n    jobTitle,\n    jobLocation,\n    jobType,\n    jobDate,\n    companyLogo,\n    companyName,\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(CardBase, {\n    className: clsx('card-job', classes.root, className),\n    align: \"left\",\n    ...rest,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        alignItems: \"center\",\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: clsx(classes.dot, classes.dotBig),\n          style: {\n            background: badgeColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          variant: \"body2\",\n          color: \"textPrimary\",\n          children: badgeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.jobTitle,\n          children: jobTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        alignItems: \"center\",\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          variant: \"subtitle1\",\n          color: \"textSecondary\",\n          children: jobLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: clsx(classes.dot, classes.dotSmall, classes.dotMargin)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          variant: \"subtitle1\",\n          color: \"textSecondary\",\n          children: jobType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n      disableGutters: true,\n      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: companyLogo,\n          alt: companyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: companyName,\n        secondary: jobDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardJob, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CardJob;\nCardJob.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * Badge color of the job card\n   */\n  badgeColor: PropTypes.string.isRequired,\n\n  /**\n   * Badge title of the job card\n   */\n  badgeTitle: PropTypes.string.isRequired,\n\n  /**\n   * Job title of the card\n   */\n  jobTitle: PropTypes.string.isRequired,\n\n  /**\n   * Job location of the card\n   */\n  jobLocation: PropTypes.string.isRequired,\n\n  /**\n   * Job type of the card\n   */\n  jobType: PropTypes.string.isRequired,\n\n  /**\n   * Job location of the card\n   */\n  jobDate: PropTypes.string.isRequired,\n\n  /**\n   * Company logo of the card\n   */\n  companyLogo: PropTypes.string.isRequired,\n\n  /**\n   * Company name of the card\n   */\n  companyName: PropTypes.string.isRequired\n};\nexport default CardJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardJob\");","map":{"version":3,"sources":["C:/Users/Issa/web/New folder (2)/theFront-v3.2.2/REAct-scripts/src/components/organisms/CardJob/CardJob.js"],"names":["React","clsx","PropTypes","makeStyles","Grid","Typography","ListItem","ListItemAvatar","Avatar","ListItemText","CardBase","useStyles","theme","root","height","width","dot","display","spacing","background","palette","text","primary","borderRadius","marginRight","dotBig","dotSmall","jobTitle","fontWeight","dotMargin","margin","CardJob","props","badgeColor","badgeTitle","jobLocation","jobType","jobDate","companyLogo","companyName","className","rest","classes","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  Typography,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n} from '@material-ui/core';\nimport { CardBase } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%',\n  },\n  dot: {\n    display: 'inline-block',\n    width: theme.spacing(1),\n    height: theme.spacing(1),\n    background: theme.palette.text.primary,\n    borderRadius: '100%',\n    marginRight: theme.spacing(1),\n  },\n  dotBig: {\n    width: theme.spacing(2),\n    height: theme.spacing(2),\n  },\n  dotSmall: {\n    width: theme.spacing(1 / 2),\n    height: theme.spacing(1 / 2),\n  },\n  jobTitle: {\n    fontWeight: 700,\n  },\n  dotMargin: {\n    margin: theme.spacing(0, 1),\n  },\n}));\n\n/**\n * Component to display the job card\n *\n * @param {Object} props\n */\nconst CardJob = props => {\n  const {\n    badgeColor,\n    badgeTitle,\n    jobTitle,\n    jobLocation,\n    jobType,\n    jobDate,\n    companyLogo,\n    companyName,\n    className,\n    ...rest\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <CardBase\n      className={clsx('card-job', classes.root, className)}\n      align=\"left\"\n      {...rest}\n    >\n      <Grid container spacing={2}>\n        <Grid item container alignItems=\"center\" xs={12}>\n          <span\n            className={clsx(classes.dot, classes.dotBig)}\n            style={{ background: badgeColor }}\n          />\n          <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\n            {badgeTitle}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" className={classes.jobTitle}>\n            {jobTitle}\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid item container alignItems=\"center\" xs={12}>\n          <Typography\n            component=\"span\"\n            variant=\"subtitle1\"\n            color=\"textSecondary\"\n          >\n            {jobLocation}\n          </Typography>\n          <span\n            className={clsx(classes.dot, classes.dotSmall, classes.dotMargin)}\n          />\n          <Typography\n            component=\"span\"\n            variant=\"subtitle1\"\n            color=\"textSecondary\"\n          >\n            {jobType}\n          </Typography>\n        </Grid>\n      </Grid>\n      <ListItem disableGutters>\n        <ListItemAvatar>\n          <Avatar src={companyLogo} alt={companyName} />\n        </ListItemAvatar>\n        <ListItemText primary={companyName} secondary={jobDate} />\n      </ListItem>\n    </CardBase>\n  );\n};\n\nCardJob.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n  /**\n   * Badge color of the job card\n   */\n  badgeColor: PropTypes.string.isRequired,\n  /**\n   * Badge title of the job card\n   */\n  badgeTitle: PropTypes.string.isRequired,\n  /**\n   * Job title of the card\n   */\n  jobTitle: PropTypes.string.isRequired,\n  /**\n   * Job location of the card\n   */\n  jobLocation: PropTypes.string.isRequired,\n  /**\n   * Job type of the card\n   */\n  jobType: PropTypes.string.isRequired,\n  /**\n   * Job location of the card\n   */\n  jobDate: PropTypes.string.isRequired,\n  /**\n   * Company logo of the card\n   */\n  companyLogo: PropTypes.string.isRequired,\n  /**\n   * Company name of the card\n   */\n  companyName: PropTypes.string.isRequired,\n};\n\nexport default CardJob;\n"]},"metadata":{},"sourceType":"module"}